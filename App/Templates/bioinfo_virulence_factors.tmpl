<!DOCTYPE html>
<html>

<TMPL_INCLUDE NAME="header.tmpl">

<TMPL_INCLUDE NAME="nav_bar_vir_amr.tmpl">

<script src="/App/Styling/js/jquery-1.9.1.js"></script>
<script src="/App/Styling/js/jquery-ui-1.10.1.js"></script>
<script type="text/javascript" src="/App/Styling/js/intro.js"></script>
<link rel="stylesheet" href="/App/Styling/css/jquery-ui-1.10.1.css">
<link rel="stylesheet" href="/App/Styling/css/introjs.css">

<body onload="initialize()" style="background-color:#796e6c">

	<div class="container" style="background-color:#FFFFFF">

		<div style="margin:10px 10px 10px 10px;padding:10px 10px 10px 10px">
			<h1><span>VIRULENCE & AMR</span> <span style="color:#d41616">INFORMATION</span></h1>
		</div>

		<span class="help-block" style="margin:0px 10px 20px 10px">Select 1 or more from each of the virulence factors, antimicrobial resistnce genes, and from the strain list (horizontal tabs). A table will generate below showing whether your selected strains contain the chosen virulence factors or anitmicrobial resistance genes. You can also look up descrptive information on each of the virulence factors or antimicrobial resistance genes by navigating the tabs on the left.</span>

		<TMPL_INCLUDE NAME="virulence_amr_by_strain_form.tmpl">

		<div id="wheel-loader" style="margin:0px 0px 30px 0px;display:none" align="middle"><small><em><img src="/App/Pictures/wheel-loader.gif"> Loading Info...</em></small></div>

	</div>
</body>
<TMPL_INCLUDE NAME="footer.tmpl">

</html>

<script type="text/javascript">
function startIntro(){

	var intro = introJs();
	intro.setOptions({
		steps: [
		{
			element: '#virSelectTab',
			intro: "Select 1 or more virulence factors from the list below by clicking the check boxes."
		},
		{
			element: '#amrSelectTab',
			intro: "Select this tab to view a list of antimicrobial resistance genes. Select 1 or more of these antimicrobial resistance genes from the list by clicking the check boxes.",
		},
		{
			element: '#strainSelectTab',
			intro: "Select this tab to view a list of E. coli genomes. Select 1 or more of these E. coli genomes from the list above by clicking the check boxes.",
		},
		]
	});
	intro.start();
}

$('#update-vf-amr-meta').click(function(event) {
	event.preventDefault();
	visableData = [];
	$('input[name="vf-amr-meta-option"]:checked').each( function(i, e) { visableData.push( $( e ).val() ); });
	updateVFAMRMeta('genomes' , visableData);
	return false;
});

function initialize() {
	//Need to init amr and vfactor lists
	updateVFAMRMeta("genomes");
	updateVFAMRMeta("virulence");
	updateVFAMRMeta("amr");
}

function updateVFAMRMeta(list , visibleData) {
	if(typeof visibleData === 'undefined' || visibleData.length == 0) {
		visibleData = ['name'];
	}

	if (list == "genomes") {
		//This needs to be changed to account for public and private data
		var dropDown = $('#pubStrainList');
		dropDown.empty();
		$('#select-all-genomes').is(':checked') ? $('#select-all-genomes').click() : 0;
		genomeLabels = {};
		$.each( public_genomes, function(feature_id, genome_obj) {
			var lab = metaLabel(public_genomes[feature_id], visibleData);
			genomeLabels[feature_id] = lab;
			dropDown.append(
				'<li style="list-style-type:none">'+
				'<label class="checkbox" for="genome_'+feature_id+'"><input id="genome_'+feature_id+'" class="checkbox" type="checkbox" value="'+feature_id+'" name="selectedStrains"/>'+lab+'</label>'+
				'</li>'
				);
		});
	}
	else if (list == "virulence") {
		var dropDown = $('#virListSelection');
		dropDown.empty();
		$('#select-all-virulence').is(':checked') ? $('#select-all-virulence').click() : 0;
		$.each (virulence_factors, function(vir_id, vir_obj) {
			dropDown.append(
				'<li style="list-style-type:none">'+
				'<label class="checkbox" for="vir_'+vir_obj.feature_id+'"><input id="vir_'+vir_obj.feature_id+'" class="checkbox" type="checkbox" value="'+vir_obj.feature_id+'" name="selectedVirulence"/>'+vir_obj.name+' - '+vir_obj.uniquename+'</label>'+
				'</li>'
				);
		});
	}
	else if (list == "amr"){
		var dropDown = $('#amrListSelection');
		dropDown.empty();
		$('#select-all-amr').is(':checked') ? $('#select-all-amr').click() : 0;
		$.each (amr_genes, function(amr_id, amr_obj) {
			dropDown.append(
				'<li style="list-style-type:none">'+
				'<label class="checkbox" for="amr_'+amr_obj.feature_id+'"><input id="amr_'+amr_obj.feature_id+'" class="checkbox" type="checkbox" value="'+amr_obj.feature_id+'" name="selectedAmr"/>'+amr_obj.name+' - '+amr_obj.uniquename+'</label>'+
				'</li>'
				);
		});
	}

} 

function appendFilteredList(obj , list) {
	if (list == 'virulence') {
		var dropDown = $('#virListSelection');
		dropDown.empty();
		$('#select-all-virulence').is(':checked') ? $('#select-all-virulence').click() : 0;
		$.each (obj, function(obj_id, obj) {
			dropDown.append(
				'<li style="list-style-type:none">'+
				'<label class="checkbox" for="vir_'+obj.feature_id+'"><input id="vir_'+obj.feature_id+'" class="checkbox" type="checkbox" value="'+obj.feature_id+'" name="selectedVirulence"/>'+obj.name+' - '+obj.uniquename+'</label>'+
				'</li>'
				);
		});
	}
	else if (list == 'amr') {
		var dropDown = $('#amrListSelection');
		dropDown.empty();
		$('#select-all-amr').is(':checked') ? $('#select-all-amr').click() : 0;
		$.each (obj, function(obj_id, obj) {
			dropDown.append(
				'<li style="list-style-type:none">'+
				'<label class="checkbox" for="amr_'+obj.feature_id+'"><input id="amr_'+obj.feature_id+'" class="checkbox" type="checkbox" value="'+obj.feature_id+'" name="selectedAmr"/>'+obj.name+' - '+obj.uniquename+'</label>'+
				'</li>'
				);
		});
	}
	else {
		var dropDown = $('#pubStrainList');
		dropDown.empty();
		var visibleData = [];
		$('input[name="list-meta-option"]:checked').each( function(i, e) { visableData.push( $( e ).val() ); });
		if(typeof visableData === 'undefined' || visableData.length == 0) {
			visableData = ['name'];
		}
		$('#select-all-genomes').is(':checked') ? $('#select-all-genomes').click() : 0;
		$.each( obj, function(feature_id, genome_obj) {
			var lab = metaLabel(obj[feature_id], visableData);
			dropDown.append(
				'<li style="list-style-type:none">'+
				'<label class="checkbox" for="genome_'+feature_id+'"><input id="genome_'+feature_id+'" class="checkbox" type="checkbox" value="'+feature_id+'" name="selectedStrains"/>'+lab+'</label>'+
				'</li>'
				);
		});
	}
}

// Create labels for a genome with required meta data
function metaLabel(feature, vdata) {
	var label = [];
	if(vdata.indexOf('name') != -1) {
		label.push(feature.uniquename);
	}
	
	if(vdata.indexOf('accession') != -1) {
		if(typeof feature.primary_dbxref !== 'undefined') {
			label.push(feature.primary_dbxref);
		} else {
			label.push('NA');
		}
	}
	
	var metaDataTypes = ['strain', 'serotype', 'isolation_host', 'isolation_source', 'isolation_date'];
	for(var i=0; i<metaDataTypes.length; i++) {
		var x = metaDataTypes[i];
		
		if(vdata.indexOf(x) != -1) {
			
			if(typeof feature[x] !== 'undefined') {
				var sublabel = [];
				
				for(var j=0; j<feature[x].length; j++) {
					sublabel.push(feature[x][j]);
				}
				
				var sublabel_string = sublabel.join();
				label.push(sublabel_string);
			} else {
				label.push('NA');
			}
		}
	}
	return label.join('|');
}

</script>

