<!DOCTYPE html>
<html>

<head>

	<TMPL_INCLUDE NAME="header.tmpl">

	<!-- jQuery -->
	<link rel="stylesheet" href="/App/Styling/css/jquery-ui-1.10.1.css">
	<script src="/App/Styling/js/jquery-1.9.1.js"></script>
	<script src="/App/Styling/js/jquery-ui-1.10.1.js"></script>
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
	<!-- Intro.js -->
	<link rel="stylesheet" href="/App/Styling/css/introjs.css">
	<script type="text/javascript" src="/App/Styling/js/intro.js"></script>
	<!-- MetaTab -->
	<script type="text/javascript" src="/App/Styling/js/genodo_meta_tab.js"></script>
	


</head>

<body style="background-color:#796e6c">

	<style>

	.present {
		background-color:#81DAF5;
		text-align: center;
		border-style:solid dotted solid dotted; 
		border-width:1px;
		border-color:#848484;
	}

	.absent {
		background-color:#F3F781;
		text-align: center;
		border-style:solid dotted solid dotted; 
		border-width:1px;
		border-color:#848484;
	}

	.table_name {
		width: 400px;
		height: 20px;
	}

	table div.rotated {
		-webkit-transform: rotate(270deg);
		-moz-transform: rotate(270deg);
		writing-mode:tb-rl;
		white-space: nowrap;
	}

	thead th {
		vertical-align: top;
		padding: 2px;
	}

	table .vertical {
		white-space: nowrap;
	}

	table {
		border-collapse: collapse;
	}

	#amrByStrain, #virByStrain {
		padding: 20pt 0pt;
	}

	</style>

	<TMPL_INCLUDE NAME="nav_bar.tmpl">

	<div class="container" style="background-color:#FFFFFF">

		<div style="margin:10px 10px 10px 10px;padding:10px 10px 10px 10px">
			<h1><span>VIRULENCE & AMR</span> <span style="color:#d41616">INFORMATION</span></h1>
		</div>

		<span class="help-block" style="margin:0px 10px 20px 10px">Select 1 or more from each of the virulence factors, antimicrobial resistnce genes, and from the strain list (horizontal tabs). A table will generate below showing whether your selected strains contain the chosen virulence factors or anitmicrobial resistance genes. You can also look up descrptive information on each of the virulence factors or antimicrobial resistance genes by navigating the tabs on the left.</span>

		<TMPL_INCLUDE NAME="virulence_amr_by_strain_form.tmpl">

		<div id="wheel-loader" style="margin:0px 0px 30px 0px;display:none" align="middle"><small><em><img src="/App/Pictures/wheel-loader.gif"> Loading Info...</em></small></div>

	</div>
</body>
<TMPL_INCLUDE NAME="footer.tmpl">

</html>

<script type="text/javascript">

//Intro.js
function startIntro(){

	var intro = introJs();
	intro.setOptions({
		steps: [
		{
			element: '#strainSelectTab',
			intro: "Select this tab to view a list of E. coli genomes. Select 1 or more of these E. coli genomes from the list above by clicking the check boxes.",
		},
		{
			element: '#virSelectTab',
			intro: "Select 1 or more virulence factors from the list below by clicking the check boxes."
		},
		{
			element: '#amrSelectTab',
			intro: "Select this tab to view a list of antimicrobial resistance genes. Select 1 or more of these antimicrobial resistance genes from the list by clicking the check boxes.",
		}
		]
	});
	intro.start();
}

var metaTab = new MetaTab('strainList');
$('#form-meta-display').append(metaTab.form_html);

var metaTabSelections = ['name'];

	//On start run this function
	$(function() {
		$('input[name="'+metaTab.tab+'-meta-option"][value="name"]').attr("checked", true);
		updateMeta("genomes", metaTabSelections);
		updateMeta("virulence");
		updateMeta("amr");
	});

	$('input[name="'+metaTab.tab+'-meta-option"]').change( function() {
		metaTabSelections = metaTab.updateSelections(this.value, this.checked, metaTabSelections);
		updateMeta("genomes", metaTabSelections);
	});

	function updateMeta(list , selectedMetaData) {
		if(typeof selectedMetaData === 'undefined' || selectedMetaData.length == 0) {
			selectedMetaData = ['name'];
		}

		if (list == "genomes") {
		//This needs to be changed to account for public and private data
		var dropDown = $('#pubStrainList li');
		dropDown.empty();
		$('#select-all-genomes').is(':checked') ? $('#select-all-genomes').click() : 0;
		genomeLabels = {};
		var selectedCount = 0;
		$.each( public_genomes, function(feature_id, genome_obj) {
			var selectedInput = checkIfChecked(feature_id, selectedGenomes);
			var lab = metaTab.metaLabel(public_genomes[feature_id], selectedMetaData);
			genomeLabels[feature_id] = lab;
			if (selectedInput !== undefined) {
				selectedCount++;
				dropDown.append(
					'<label class="checkbox" for="genome_'+feature_id+'"><input id="genome_'+feature_id+'" class="checkbox" type="checkbox" value="'+feature_id+'" name="selectedStrains" onchange="toggleChecked(this, selectedGenomes)" checked/>'+lab+'</label>'
					);
			}
			else {
				dropDown.append(
					'<label class="checkbox" for="genome_'+feature_id+'"><input id="genome_'+feature_id+'" class="checkbox" type="checkbox" value="'+feature_id+'" name="selectedStrains" onchange="toggleChecked(this, selectedGenomes)"/>'+lab+'</label>'
					);
			}
		});
		filterGenomes();
		(dropDown.children().length == selectedCount) && (selectedCount !== 0) ? $('#select-all-genomes').click() : 0;
	}
	else if (list == "virulence") {
		var dropDown = $('#virListSelection li');
		dropDown.empty();
		$('#select-all-virulence').is(':checked') ? $('#select-all-virulence').click() : 0;
		$.each (virulence_factors, function(vir_id, vir_obj) {
			dropDown.append(
				'<label class="checkbox" for="vir_'+vir_obj.feature_id+'"><input id="vir_'+vir_obj.feature_id+'" class="checkbox" type="checkbox" value="'+vir_obj.feature_id+'" name="selectedVirulence" onchange="toggleChecked(this, selectedVirulence)"/>'+vir_obj.name+'</label>'
				);
		});
	}
	else if (list == "amr"){
		var dropDown = $('#amrListSelection li');
		dropDown.empty();
		$('#select-all-amr').is(':checked') ? $('#select-all-amr').click() : 0;
		$.each (amr_genes, function(amr_id, amr_obj) {
			dropDown.append(
				'<label class="checkbox" for="amr_'+amr_obj.feature_id+'"><input id="amr_'+amr_obj.feature_id+'" class="checkbox" type="checkbox" value="'+amr_obj.feature_id+'" name="selectedAmr" onchange="toggleChecked(this, selectedAmr)"/>'+amr_obj.name+'</label>'
				);
		});
	}
}

////////////////////////////////Refactor these methods
//////////////////////////////////////////////////TODO:
$('#virulence-autocomplete').keyup( function() {
	var filteredList = {};
	var searchTerm = $('#virulence-autocomplete').val().toLowerCase();
	$.each(virulence_factors, function(vir_id, vir_obj) {
		var name = vir_obj.name.toLowerCase();
		if (name.indexOf(searchTerm) > -1) {
			filteredList[vir_id] = vir_obj;
		}
	});
	appendFilteredList(filteredList , 'virulence');
});

$('#amr-autocomplete').keyup( function() {
	var filteredList = {};
	var searchTerm = $('#amr-autocomplete').val().toLowerCase();
	$.each(amr_genes, function(amr_id, amr_obj) {
		var name = amr_obj.name.toLowerCase();
		if (name.indexOf(searchTerm) > -1) {
			filteredList[amr_id] = amr_obj;
		}
	});
	appendFilteredList(filteredList , 'amr');
});

$('#genomes-autocomplete').keyup( function() {
	filterGenomes();
});

function filterGenomes() {
	var filteredList = {};
	var searchTerm = $('#genomes-autocomplete').val().toLowerCase();
	$.each(genomeLabels, function(feature_id, label) {
		var name = label.toLowerCase();
		if (name.indexOf(searchTerm) > -1) {
			filteredList[feature_id] = public_genomes[feature_id];
		}
	});
	appendFilteredList(filteredList, 'genomes', metaTabSelections);
}

/////////////////////////////////////////////////////////////////

function appendFilteredList(obj , list, selectedMetaData) {
	if (list == 'virulence') {
		var dropDown = $('#virListSelection li');
		dropDown.empty();
		var selectedCount = 0;
		$('#select-all-virulence').is(':checked') ? $('#select-all-virulence').click() : 0;
		$.each (obj, function(obj_id, obj) {
			var selectedInput = checkIfChecked(obj_id, selectedVirulence);
			if (selectedInput !== undefined) {
				selectedCount++;
				dropDown.append(selectedInput);
			}
			else {
				dropDown.append(
					'<label class="checkbox" for="vir_'+obj.feature_id+'"><input id="vir_'+obj.feature_id+'" class="checkbox" type="checkbox" value="'+obj.feature_id+'" name="selectedVirulence" onchange="toggleChecked(this, selectedVirulence)"/>'+obj.name+'</label>'
					);
			}
		});
		(dropDown.children().length == selectedCount) && (selectedCount !== 0) ? $('#select-all-virulence').click() : 0;
	}
	else if (list == 'amr') {
		var dropDown = $('#amrListSelection li');
		dropDown.empty();
		var selectedCount = 0;
		$('#select-all-amr').is(':checked') ? $('#select-all-amr').click() : 0;
		$.each (obj, function(obj_id, obj) {
			var selectedInput = checkIfChecked(obj_id, selectedAmr);
			if (selectedInput !== undefined) {
				selectedCount++;
				dropDown.append(selectedInput);
			}
			else {
				dropDown.append(
					'<label class="checkbox" for="amr_'+obj.feature_id+'"><input id="amr_'+obj.feature_id+'" class="checkbox" type="checkbox" value="'+obj.feature_id+'" name="selectedAmr" onchange="toggleChecked(this, selectedAmr)"/>'+obj.name+'</label>'
					);
			}
		});
		(dropDown.children().length == selectedCount) && (selectedCount !== 0) ? $('#select-all-amr').click() : 0;
	}
	else {
		var dropDown = $('#pubStrainList li');
		dropDown.empty();
		var selectedCount = 0;
		$('#select-all-genomes').is(':checked') ? $('#select-all-genomes').click() : 0;
		$.each( obj, function(feature_id, genome_obj) {
			var selectedInput = checkIfChecked(feature_id, selectedGenomes);
			var lab = metaTab.metaLabel(obj[feature_id], selectedMetaData);
			if (selectedInput !== undefined) {
				selectedCount++;
				dropDown.append(
					'<label class="checkbox" for="genome_'+feature_id+'"><input id="genome_'+feature_id+'" class="checkbox" type="checkbox" value="'+feature_id+'" name="selectedStrains" onchange="toggleChecked(this, selectedGenomes)" checked/>'+lab+'</label>'
					);
			}
			else {
				dropDown.append(
					'<label class="checkbox" for="genome_'+feature_id+'"><input id="genome_'+feature_id+'" class="checkbox" type="checkbox" value="'+feature_id+'" name="selectedStrains" onchange="toggleChecked(this, selectedGenomes)"/>'+lab+'</label>'
					);
			}
		});
		(dropDown.children().length == selectedCount) && (selectedCount !== 0) ? $('#select-all-genomes').click() : 0;
	}
}

function toggleChecked(input, listName) {
	var index = listName[input.value];
	if (input.checked == true) {
		if (index == undefined) {
			listName[input.value] = input.parentNode;
		}
		else {
		}
	}
	else {
		delete listName[input.value];
	}
}

function checkIfChecked(id, listName) {
	return listName[id];
}


</script>

